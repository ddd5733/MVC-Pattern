/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2019-12-05 07:20:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.score;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import dto.Score_DTO;

public final class score_005fr_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Score_DTO> dtos = (ArrayList<Score_DTO>)request.getAttribute("t_dtos");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form name =\"mem\">\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>아이디</td>\r\n");
      out.write("\t\t\t<td>성명</td>\r\n");
      out.write("\t\t\t<td>국어</td>\r\n");
      out.write("\t\t\t<td>영어</td>\r\n");
      out.write("\t\t\t<td>수학</td>\r\n");
      out.write("\t\t\t<td>총점</td>\r\n");
      out.write("\t\t\t<td>평균</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"hidden\" name =\"t_work\" value=\"gow\">\r\n");

	if(dtos.size() !=0){

      out.write('	');
      out.write('\r');
      out.write('\n');

	for(int k=0; k < dtos.size(); k++){

      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><a href=\"/scoreServlet?t_id=");
      out.print(dtos.get(k).getId());
      out.write("&&t_work=view\">");
      out.print(dtos.get(k).getId());
      out.write("</a></td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dtos.get(k).getName());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dtos.get(k).getKor());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dtos.get(k).getEng());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dtos.get(k).getMat());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dtos.get(k).getTotal());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(dtos.get(k).getAva());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\t\r\n");
      out.write("\r\n");
		
	}

      out.write("\t\r\n");
      out.write("\r\n");
		
	} else {

      out.write("\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"7\">등록된 자료 없음</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\t\r\n");
      out.write("\t\r\n");
		
	}

      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<input type =\"button\" value=\"등록\" onClick=\"goWrite()\" >\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction goWrite(){\r\n");
      out.write("\t\tvar form = document.mem;\r\n");
      out.write("\t\tform.action = \"/scoreServlet\";\r\n");
      out.write("\t\tform.method = \"post\";\r\n");
      out.write("\t\tform.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
