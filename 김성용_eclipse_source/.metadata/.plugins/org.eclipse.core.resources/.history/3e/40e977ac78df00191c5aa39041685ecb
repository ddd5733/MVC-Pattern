package packAB;

import java.util.Arrays;

public class problem7 {

	public static void main(String[] args) {
//		소수를 크기 순으로 나열하면 2, 3, 5, 7, 11, 13, ... 과 같이 됩니다.
//		이 때 10,001번째의 소수를 구하세요
		
//		int[] arr = new int[10000];
//		arr[0]=2;
//		int a=1;
//		boolean gubun = true;
//		int k=1;
//		int jeasu=2;
//		while(gubun){
//			k++;
//				for(jeasu=2; jeasu<=k; jeasu++) {
//					if(k==jeasu) {
//					
//						arr[a]=k;
//						a++;
//						
//					}
//					
//				}
//			
//			jeasu=2;
//				
//			if(a>10002) {
//					gubun=false;
//				}
//			System.out.println(k);
//			System.out.println(arr[0]);
//			System.out.println(arr[1]);
//			System.out.println(arr[2]);
//			System.out.println(arr[3]);
//			System.out.println(arr[4]);
//			System.out.println(arr[5]);
//		}
		
			
			int arr[] = new int[10001];
			
			Arrays.fill(arr, 0);
			
			for(int i = 2; i <= 10000; i++) {
				if(arr[i] == 1) continue;
				for(int j = i + 1; j <= 10000; j++) {
					if(j % i == 0) arr[j] = 1;
				}
			}
		for(int i = M; i <= N; i++) {
				if(arr[i] == 0) System.out.println(i);
			}
	



		}
	}
